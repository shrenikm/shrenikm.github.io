<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>https://shrenikm.com/</link>
    <description>Recent content on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <managingEditor>shrenik95@gmail.com (Shrenik M)</managingEditor>
    <webMaster>shrenik95@gmail.com (Shrenik M)</webMaster>
    <lastBuildDate>Thu, 26 Jun 2025 00:57:00 -0700</lastBuildDate>
    <atom:link href="https://shrenikm.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reference: Behavior Cloning for Manipulation</title>
      <link>https://shrenikm.com/posts/2025-05-17-reference-behavior-cloning-for-manipulation/</link>
      <pubDate>Thu, 26 Jun 2025 00:57:00 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2025-05-17-reference-behavior-cloning-for-manipulation/</guid>
      <description>&lt;!--- Post 9 --&gt;&#xA;&lt;p&gt;Hello, it&amp;rsquo;s time for my yearly post! The goal of this one is to be a handy reference for behavior cloning as applied to manipulation &amp;ndash; something I&amp;rsquo;ve been spending quite a bit of time on over the past 6-9 months. The field has been progressing at an absurdly rapid pace of late (somehow we&amp;rsquo;re at a point where robots can do &lt;a href=&#34;https://www.physicalintelligence.company/blog/pi0&#34;&gt;laundry&lt;/a&gt;), so I thought it&amp;rsquo;d be a good exercise to summarize where we&amp;rsquo;re at right now and how we got here (at least from my perspective and based on what I&amp;rsquo;ve read so far). I&amp;rsquo;m hoping this becomes a useful resource for any manipulation enthusiasts stumbling upon it, and of course, for future me as well!&lt;/p&gt;</description>
    </item>
    <item>
      <title>ZMP: Generating Bipedal Walking Trajectories</title>
      <link>https://shrenikm.com/posts/2024-04-03-zmp-generating-bipedal-walking-trajectories/</link>
      <pubDate>Wed, 03 Apr 2024 22:31:49 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2024-04-03-zmp-generating-bipedal-walking-trajectories/</guid>
      <description>&lt;!--- Post 8 --&gt;&#xA;&lt;p&gt;Legged robot research has been an active area of study since the late nineties. Let&amp;rsquo;s take a look at how we can generate walking trajectories for bipedal robots, using some of these ideas.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;The Objective:&lt;/strong&gt; Implement a quick and dirty way of generating walking trajectories&lt;br&gt;&#xA;&lt;strong&gt;Constraints:&lt;/strong&gt; Do it quickly. Minimize sophistication. Anything goes!&lt;/p&gt;&#xA;&lt;p&gt;What this post will cover:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Overview of the minimal set of ideas required to develop walking algorithms&lt;/li&gt;&#xA;&lt;li&gt;Computation of bipedal joint trajectories for a simple walking gait&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;What will not be covered:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up a Robotic Manipulator</title>
      <link>https://shrenikm.com/posts/2024-03-08-setting-up-a-manipulator/</link>
      <pubDate>Fri, 08 Mar 2024 22:11:21 -0800</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2024-03-08-setting-up-a-manipulator/</guid>
      <description>&lt;!-- Post 7 --&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s take a look at how we can set up a framework for streamlined simulation and hardware control of a manipulator. The robot under consideration is Ufactory&amp;rsquo;s Lite6 manipulator and the simulation/setup tool used is Drake.&lt;/p&gt;&#xA;&lt;p&gt;All the code used in this post can be found in my &lt;a href=&#34;https://github.com/shrenikm/manipulation_research&#34;&gt;repo&lt;/a&gt;. But before we start, some explanations are in order.&lt;/p&gt;&#xA;&lt;p&gt;Lite6?&lt;/p&gt;&#xA;&lt;p&gt;The &lt;a href=&#34;https://www.ufactory.cc/lite-6-collaborative-robot/&#34;&gt;Lite6&lt;/a&gt; is one of the more economical (not to be confused with cheap) manipulators one can buy, especially for personal research where you&amp;rsquo;re not going to be spending tens of thousands of dollars on some of the more well established robots out there. It&amp;rsquo;s well built, has surprisingly good specifications for the price point, and comes with an integrated controller. You can get a parallel and vacuum gripper for it, but also comes with hardware interfaces that can support custom grippers. The product is well supported and their API (python and C++) is easy to use. The main pain point is its parallel gripper, which can only open by 1.6 cm. This severely limits the type of objects you can pick/place, but luckily for us, pick and place is only a small part of robotic manipulation!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding TrajOpt</title>
      <link>https://shrenikm.com/posts/2024-01-06-understanding-trajopt/</link>
      <pubDate>Sat, 06 Jan 2024 11:11:12 -0800</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2024-01-06-understanding-trajopt/</guid>
      <description>&lt;!-- Post 6 --&gt;&#xA;&lt;p&gt;TrajOpt &lt;a href=&#34;#ref1&#34;&gt;[1]&lt;/a&gt; is an optimization based approach for motion planning. More specifically, it uses a sequential convex optimization procedure along with a formulation of collision constraints to find locally optimal planning trajectories, even for robotic systems that have a large number of degrees of freedom.&lt;/p&gt;&#xA;&lt;p&gt;This post will go into the details of the optimization part, and give an outline of how it can be implemented. My implementation can be found &lt;a href=&#34;https://github.com/shrenikm/Atium/tree/main/atium/implementations/trajopt&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multi Vehicle Mixed Integer Programming</title>
      <link>https://shrenikm.com/posts/2023-12-24-multi-vehicle-mixed-integer-programming/</link>
      <pubDate>Sun, 24 Dec 2023 18:54:32 -0800</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2023-12-24-multi-vehicle-mixed-integer-programming/</guid>
      <description>&lt;!--- Post 5 --&gt;&#xA;&lt;p&gt;In this post, we take a look at this &lt;a href=&#34;#references&#34;&gt;$[1]$&lt;/a&gt; paper, which introduces a simple, yet interesting approach to solving a multi-vehicle path planning problem.&lt;/p&gt;&#xA;&lt;p&gt;My implementation of the algorithm that was used to evaluate its performance and generate all the results in this post can be found &lt;a href=&#34;https://github.com/shrenikm/Atium/tree/main/atium/implementations/multi_vehicle_mip&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;$\newcommand{\ith}{i^{th}}$&#xA;$\newcommand{\pth}{p^{th}}$&#xA;$\newcommand{\qth}{q^{th}}$&#xA;$\newcommand{\lth}{l^{th}}$&#xA;$\newcommand{\MR}{\mathbb{R}}$&#xA;$\newcommand{\xpi}{x_{pi}}$&#xA;$\newcommand{\ypi}{y_{pi}}$&#xA;$\newcommand{\xqi}{x_{qi}}$&#xA;$\newcommand{\yqi}{y_{qi}}$&#xA;$\newcommand{\xmin}{x_{min}}$&#xA;$\newcommand{\xmax}{x_{max}}$&#xA;$\newcommand{\ymin}{y_{min}}$&#xA;$\newcommand{\ymax}{y_{max}}$&#xA;$\newcommand{\xlmin}{x_{l,min}}$&#xA;$\newcommand{\xlmax}{x_{l,max}}$&#xA;$\newcommand{\ylmin}{y_{l,min}}$&#xA;$\newcommand{\ylmax}{y_{l,max}}$&#xA;$\newcommand{\xlimin}{x_{li,min}}$&#xA;$\newcommand{\xlimax}{x_{li,max}}$&#xA;$\newcommand{\ylimin}{y_{li,min}}$&#xA;$\newcommand{\ylimax}{y_{li,max}}$&#xA;$\newcommand{\cplx}{c_{pl,x}}$&#xA;$\newcommand{\cply}{c_{pl,y}}$&#xA;$\newcommand{\dpqx}{d_{pq,x}}$&#xA;$\newcommand{\dpqy}{d_{pq,y}}$&#xA;$\newcommand{\tpli}{t_{pli}}$&#xA;$\newcommand{\spi}{s_{pi}}$&#xA;$\newcommand{\spij}{s_{pij}}$&#xA;$\newcommand{\spinext}{s_{p,i+1}}$&#xA;$\newcommand{\spn}{s_{pN}}$&#xA;$\newcommand{\spf}{s_{pf}}$&#xA;$\newcommand{\wpi}{w_{pi}}$&#xA;$\newcommand{\wpij}{w_{pij}}$&#xA;$\newcommand{\wpn}{w_{pN}}$&#xA;$\newcommand{\upi}{u_{pi}}$&#xA;$\newcommand{\upik}{u_{pik}}$&#xA;$\newcommand{\vpi}{v_{pi}}$&#xA;$\newcommand{\vpik}{v_{pik}}$&#xA;$\newcommand{\Ap}{A_{p}}$&#xA;$\newcommand{\Bp}{B_{p}}$&#xA;$\newcommand{\qp}{q_{p}}$&#xA;$\newcommand{\rp}{r_{p}}$&#xA;$\newcommand{\pp}{p_{p}}$&lt;/p&gt;</description>
    </item>
    <item>
      <title>Implicit Euler integration using Newton-Raphson</title>
      <link>https://shrenikm.com/posts/2021-09-25-implicit-euler-integration-using-newton-raphson/</link>
      <pubDate>Sat, 25 Sep 2021 20:11:57 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2021-09-25-implicit-euler-integration-using-newton-raphson/</guid>
      <description>&lt;!--&#xA;Latex commands&#xA;--&gt;&#xA;&lt;p&gt;$\newcommand{\Dt}{\Delta t}$&lt;/p&gt;&#xA;&lt;!-- Post 4 --&gt;&#xA;&lt;p&gt;We take a look at the implicit or backward Euler integration scheme for computing numerical solutions of ordinary differential equations. We will go over the process of integrating using the backward Euler method and make comparisons to the more well known forward Euler method.&lt;/p&gt;&#xA;&lt;p&gt;Numerical integration is extremely important when it comes to simulating real world physical systems. For robotic systems, we usually have a continuous time state dynamics that tells us how the system behaves upon the application of a certain control signal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Injective linear transformations</title>
      <link>https://shrenikm.com/posts/2021-09-20-injective-linear-transformations/</link>
      <pubDate>Mon, 20 Sep 2021 01:02:55 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2021-09-20-injective-linear-transformations/</guid>
      <description>&lt;!-- Post 3 --&gt;&#xA;&lt;p&gt;In this post, we take a look at some characteristics of injective linear transformations. Let $T$ be a linear transformation from some vector space $V$ to another vector space $W$, both defined over a field $F$. $T$ being injective, means that no two vectors in $V$ can be mapped to the same vector in $W$. We have a one-to-one mapping between the vectors in $V$ and their images in $W$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Change of basis</title>
      <link>https://shrenikm.com/posts/2021-09-06-change-of-basis/</link>
      <pubDate>Mon, 06 Sep 2021 22:32:43 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2021-09-06-change-of-basis/</guid>
      <description>&lt;!-- Post 2 --&gt;&#xA;&lt;p&gt;We look into the problem of expressing a vector $p$, whose coordinates relative to some basis is known, through the coordinates relative to a different basis.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s assume that $p$ lies in an $n$ dimensional vector space $V$ defined over the field $F$. Let $A$ and $B$ be two different sets of basis vectors containing the vectors $\set{\alpha_1, \ldots, \alpha_n}$ and $\set{\beta_1, \ldots, \beta_n}$ respectively.&lt;/p&gt;&#xA;&lt;p&gt;Let $p_A$ represent the coordinates of $p$ with respect to the basis $A$. Now, how do we go about computing $p_B$?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dimension of a proper subspace</title>
      <link>https://shrenikm.com/posts/2021-08-29-dimension-of-a-proper-subspace/</link>
      <pubDate>Sun, 29 Aug 2021 10:20:38 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/posts/2021-08-29-dimension-of-a-proper-subspace/</guid>
      <description>&lt;!-- Post 1 --&gt;&#xA;&lt;p&gt;Let $V$ be a finite dimensional vector space over the field $F$, with $\dim{V} = n$.&lt;br&gt;&#xA;We also define the ordered basis for $V$ to be $B = \set{\beta_1, \ldots, \beta_n}$.&lt;/p&gt;&#xA;&lt;p&gt;Consider a subspace $U$ of the vector space $V \subseteq U$. Naturally, we have $\dim{U} \leq \dim{V}$.&lt;/p&gt;&#xA;&lt;p&gt;This is because for any $\alpha \in U$, we have $\alpha \in V$, which can then be expressed as a linear combination of the basis vectors in $B$. Hence, we don&amp;rsquo;t require more than $n$ linearly independent vectors to represent any vector in $U$.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>https://shrenikm.com/pages/projects/</link>
      <pubDate>Sat, 28 Aug 2021 16:53:20 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/pages/projects/</guid>
      <description>&lt;h2 id=&#34;atium&#34;&gt;Atium&lt;/h2&gt;&#xA;&lt;p&gt;Atium is a more formal collection of some of my motion planning experiments, research ideas and paper implementations. Details of the individual implementations can be found within the subdirectories of the repo.&lt;/p&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;box&#34; &gt;&#xA;  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;&#xA;    &lt;div class=&#34;img&#34;&gt;&#xA;      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://shrenikm.com/pages/gifs/mvmip_setup8.gif&#34; alt=&#34;mvmip_setup8&#34;/&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;a href=&#34;https://shrenikm.com/pages/gifs/mvmip_setup8.gif&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shrenikm/Atium&#34;&gt;Repository&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;manipulation-research&#34;&gt;Manipulation Research&lt;/h2&gt;&#xA;&lt;p&gt;This is a collection of manipulation algorithms for execution in simulation and a real hardware robot.&lt;/p&gt;&#xA;&lt;/br&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;box&#34; &gt;&#xA;  &lt;figure  itemprop=&#34;associatedMedia&#34; itemscope itemtype=&#34;http://schema.org/ImageObject&#34;&gt;&#xA;    &lt;div class=&#34;img&#34;&gt;&#xA;      &lt;img itemprop=&#34;thumbnail&#34; src=&#34;https://shrenikm.com/pages/gifs/lite6_simple_pick_place_combined.gif&#34; alt=&#34;lite6_simple_pick_place_combined&#34;/&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;a href=&#34;https://shrenikm.com/pages/gifs/lite6_simple_pick_place_combined.gif&#34; itemprop=&#34;contentUrl&#34;&gt;&lt;/a&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/br&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/shrenikm/manipulation_research&#34;&gt;Repository&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;legged-research&#34;&gt;Legged Research&lt;/h2&gt;&#xA;&lt;p&gt;This is a collection of algorithms for legged robots. Everything here is purely simulation in Drake.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shrenik Muralidhar</title>
      <link>https://shrenikm.com/pages/about/</link>
      <pubDate>Sat, 28 Aug 2021 16:52:40 -0700</pubDate><author>shrenik95@gmail.com (Shrenik M)</author>
      <guid>https://shrenikm.com/pages/about/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a roboticist, currently working in R&amp;amp;D at &lt;a href=&#34;https://www.braincorp.com&#34;&gt;Brain Corporation&lt;/a&gt;, where I lead the motion planning team. I also work on mobile manipulation (Check out &lt;a href=&#34;https://www.youtube.com/playlist?list=PLijih0JSNM0-3n57yE22ae5eiMSJn1eaR&#34;&gt;Project Brawn!&lt;/a&gt;).&lt;/p&gt;&#xA;&lt;p&gt;I have a Master&amp;rsquo;s degree in Robotics from the University of Pennsylvania. While at University, I was a part of the &lt;a href=&#34;https://dair.seas.upenn.edu&#34;&gt;DAIR Lab&lt;/a&gt;, working on optimal control for bipedal robots.&lt;/p&gt;&#xA;&lt;p&gt;My interests lie in enabling robots to function autonomously in the real world, using planning, optimization and learning based approaches.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
